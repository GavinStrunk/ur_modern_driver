<?xml version="1.0"?>
<!--
  This is my version that makes it easier to launch everything at once.
  Universal robot ur5 launch.  Loads ur5 robot description (see ur_common.launch
  for more info)

  Usage:
    ur5_launch.launch rviz:=true gazebo:=true
-->
<launch>
  
  <!-- Launch the ur_modern_driver -->
  <arg name="robot_ip" default="10.1.10.109"/>
  <arg name="limited" default="true"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="5.0"/>
  <arg name="prefix" default="" />
  <arg name="gazebo" default="false" />
  <arg name="rviz" default="false" />
  <arg name="debug" default="false" />

  <!-- Launch UR in Gazebo Mode -->
  <group if="$(arg gazebo)" >
    <remap from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>

    <arg name="paused" default="false"/>
    <arg name="gui" default="true"/>
    
    <!-- startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" default="worlds/empty.world"/>
      <arg name="paused" value="$(arg paused)"/>
      <arg name="gui" value="$(arg gui)"/>
    </include>

    <!-- send robot urdf to param server -->
    <include file="$(find ur_description)/launch/ur5_upload.launch">
    <!--<include file="$(find flux_app_planning)/launch/ur5_upload.launch">-->
      <arg name="limited" value="$(arg limited)"/>
    </include>

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.1" respawn="false" output="screen" />

    <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>

    <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
    <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

    <include file="$(find ur5_moveit_config)/launch/move_group.launch">
      <arg name="limited" default="$(arg limited)"/>
      <arg name="debug" default="$(arg debug)" />
    </include>
  </group>

  <!-- Launch UR in real mode -->
  <group unless="$(arg gazebo)" >
    <!-- robot model -->
    <include file="$(find ur_description)/launch/ur5_upload.launch">
    <!-- Use custom urdf for flux application -->
    <!--<include file="$(find flux_app_planning)/launch/ur5_upload.launch">-->
      <arg name="limited" value="$(arg limited)"/>
    </include>
    
    <!-- ur common -->
    <include file="$(find ur_modern_driver)/launch/ur_common.launch">
      <arg name="prefix"  value="$(arg prefix)" />
      <arg name="robot_ip" value="$(arg robot_ip)"/>
      <arg name="min_payload"  value="$(arg min_payload)"/>
      <arg name="max_payload"  value="$(arg max_payload)"/>
    </include>

    <include file="$(find ur5_moveit_config)/launch/move_group.launch">
      <arg name="limited" default="$(arg limited)"/>
      <arg name="debug" default="$(arg debug)" />
    </include>

  </group>

  <!-- Launch rviz interface -->
  <!-- <group if="$(arg rviz)" > -->
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <arg name="config" default="true" />
  <arg unless="$(arg config)" name="command_args" value="" />
  <arg if="$(arg config)" name="command_args" value="-d $(find ur5_moveit_config)/launch/moveit.rviz" />
  <!--<arg     if="$(arg config)" name="command_args" value="-d $(find flux_app_planning)/config/moveit.rviz" />-->
    
  <node name="$(anon rviz)" launch-prefix="$(arg launch_prefix)" pkg="rviz" type="rviz" respawn="false"
    args="$(arg command_args)" output="screen">
    <rosparam command="load" file="$(find ur5_moveit_config)/config/kinematics.yaml"/>
  </node>
  <!-- </group> -->

</launch>
